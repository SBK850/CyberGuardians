/* Global variables */
:root {
  --min-text-width: 34rem;
  --content-min-width: calc(var(--image-width) + var(--min-text-width) * 2);
  timeline-scope: --content-width, --expanded-navigation;
}

/* After pseudo-elements for left content and site navigation */
.left-content::after,
.site-navigation::after {
  background-color: red;
  z-index: 10000;
  visibility: hidden;
}

/* Main element animations */
main {
  animation: expand-content;
  animation-timeline: --content-width;
}

main > *,
main::before,
main::after {
  animation-timeline: --content-width;
}

main::before {
  animation-name: wall;
  --border-position: initial;
  background-position: 0% calc(50% + var(--spacing));
}

main::after {
  animation-name: kitten;
  background-image: initial;
}

/* Keyframe definitions */
@keyframes expand-content {
  0%, 100% {
    flex-direction: row;
    align-items: center;
    flex: 1;
    max-height: 30rem;
    margin-inline-end: 0;
    margin-block-end: calc(var(--spacing) * 2);
    max-width: calc(50% - var(--spacing) / 2);
  }
}

@keyframes main-content {
  0%, 100% {
    flex: 1;
    margin-inline-end: 0;
    margin-block-end: calc(var(--spacing) * 2);
    max-width: calc(50% - var(--spacing) / 2);
  }
}

@keyframes right-content {
  0%, 100% {
    align-self: flex-end;
    padding-inline-start: calc(var(--image-width) - var(--image-width) * var(--image-clip-offset));
  }
}

@keyframes wall {
  0%, 100% {
    width: 50%;
  }
}

@keyframes kitten {
  0%, 100% {
    background-image: url("https://sbk850.github.io/images/cyberguardians-logo-ax.png");
    inset-inline-start: calc(50vw - calc(var(--image-width) * var(--image-clip-offset)));
    transform: none;
    width: 50%;
  }
}

.left-content {
  animation-name: main-content;
}

.left-content::after {
  content: "";
  position: fixed;
  top: 50%;
  inset-inline-start: var(--content-min-width);
  width: 1px;
  height: 50px;
  view-timeline: --content-width inline;
}

.right-content {
  animation-name: main-content, right-content;
}

.site-navigation {
  flex-shrink: 0;
  position: relative;
  width: max-content;
  visibility: hidden;
  animation: expand-navigation;
  animation-timeline: --expanded-navigation;
}

.site-navigation::after {
  content: "";
  display: block;
  position: absolute;
  inset-block-start: 0;
  inset-inline-end: 0;
  width: 1px;
  height: 100%;
  view-timeline: --expanded-navigation inline;
}

@keyframes expand-navigation {
  0%, 100% {
    --nav-wrapper-display: block;
    --nav-wrapper-transform: none;
    --nav-wrapper-background: transparent;
    visibility: visible;
  }
}

/* Navigation styles */
.nav-list {
  display: flex;
}

.hamburger-icon {
  animation-name: hide-menu-button;
  animation-timeline: --expanded-navigation;
}

@keyframes hide-menu-button {
  0%, 100% {
    display: none;
  }
}

/* Menu toggle styles */
.close-icon, .warning, .site-navigation {
  display: none; /* Default state for close-icon and warning */
}

.close-icon {
  position: fixed;
  z-index: 100;
}

/* Open/close animation and general navigation styling */
.navigation-animation-wrapper {
  background-color: var(--nav-wrapper-background, var(--color-background));
  display: var(--nav-wrapper-display, flex);
  align-items: center;
  justify-content: center;
  inset: 0;
  transform: var(--nav-wrapper-transform, translateX(100%));
  z-index: 100;
  position: fixed; /* Simplify repeated position property */
}

/* Styles when navigation is open */
html:has(.open-navigation:checked) {
  overflow: hidden;

  .navigation-animation-wrapper {
    transition: transform 0.25s ease-out;
    transform: none;
    width: 100%;
  }

  .nav-list {
    flex-direction: column;
  }

  .nav-list li {
    margin: 0;
  }

  .close-icon {
    display: block;
  }
}

/* Animation on navigation close */
html:has(.close-navigation:checked) .navigation-animation-wrapper {
  animation: slide-out 0.25s ease-out;
}

.nav-list {
  animation: opacity-out 0.25s ease-out; /* Apply to all .nav-list to prevent redundancy */
}

/* Keyframe animations for navigation transitions */
@keyframes slide-out {
  from {
    transform: none;
  }
  to {
    transform: translateX(100%);
  }
}

@keyframes opacity-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

/* Fallback and enhancements for non-supporting browsers */
@supports not (animation-timeline: view(inline)) {
  .warning, .site-navigation {
    display: block;
  }

  .site-navigation {
    transition: 0.25s ease-in-out;
    visibility: visible; /* Toggle visibility */
  }
}

/* Structural styles */
.flex-wrapper {
  display: flex;
  flex-flow: row nowrap;
}

.container-s, .custom-container {
  align-items: center;
  position: relative;
}

.custom-container .custom-card {
  position: relative;
  width: max-content;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  text-align: center;
  overflow: hidden;
  transition: 0.5s;
}

.custom-container .custom-card:hover {
  transform: translateY(-10px);
  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.5);
}

.custom-percent {
  position: relative;
  width: 150px;
  height: 150px;
  border-radius: 50%;
  box-shadow: inset 0 0 50px #000;
  background: #222;
  z-index: 1000;
  margin: 2rem;
}

.custom-percent .custom-num {
  position: absolute;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 50%;
}

.custom-percent .custom-num h2 {
  color: #777;
  font-weight: 700;
  font-size: 40px;
  transition: 0.5s;
}

.custom-card:hover .custom-percent .custom-num h2 {
  color: #fff;
  font-size: 60px;
}

.custom-percent .custom-num h2 span {
  color: #777;
  transition: 0.5s;
}

.custom-card:hover .custom-percent .custom-num h2 span {
  color: #fff;
}

.custom-text {
  color: #777;
  margin-top: 20px;
  font-weight: 700;
  font-size: 18px;
  letter-spacing: 1px;
  text-transform: uppercase;
  transition: 0.5s;
}

.custom-card:hover .custom-text {
  color: #fff;
}

svg {
  position: relative;
  width: 150px;
  height: 150px;
  z-index: 1000;
}

svg circle {
  width: 100%;
  height: 100%;
  fill: none;
  stroke: #191919;
  stroke-width: 10;
  stroke-linecap: round;
  transform: translate(5px, 5px);
}

svg circle:nth-child(2) {
  stroke-dasharray: 440;
  stroke-dashoffset: 440;
}

.custom-card:nth-child(1) svg circle:nth-child(2) {
  stroke-dashoffset: calc(440 - (440 * 90) / 100);
  stroke: #00ff43;
}